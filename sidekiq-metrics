#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'sidekiq/api'

THRESHOLDS = ARGV
  .fetch(0, '0')
  .split(',')
  .map { |t| t.split(':') }
  .each_with_object({}) do |(k, v), acc|
    if v.nil?
      acc.default = Integer(k)
    else
      acc[k] = Integer(v)
    end
  end

Sidekiq.configure_client do |config|
  config.redis = {
    logger: nil,
    path: ENV.fetch('REDIS_PATH', nil),
    ssl_params: { verify_mode: OpenSSL::SSL::VERIFY_NONE }
  }
end

queues = Sidekiq::Queue.all

exit 0 if queues.empty?

# Example:
#   source=sidekiq queue=default size=42 latency=1s threshold=above
#   source=sidekiq queue=low size=2 latency=0s threshold=below
queues.each do |q|
  threshold = q.latency >= THRESHOLDS[q.name] ? 'above' : 'below'
  puts "source=sidekiq queue=#{q.name} size=#{q.size} latency=#{q.latency}s threshold=#{threshold}"
end
