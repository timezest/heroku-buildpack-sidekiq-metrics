#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'sidekiq/api'

THRESHOLD = Integer(ARGV.fetch(0, 0))

Sidekiq.configure_client do |config|
  config.redis = {
    logger: nil,
    path: ENV.fetch('REDIS_PATH', nil),
    ssl_params: { verify_mode: OpenSSL::SSL::VERIFY_NONE }
  }
end

queues = Sidekiq::Queue.all

exit 0 if queues.empty?

# Example:
#   source=default sample#sidekiq.queue.size=42 sample#sidekiq.queue.latency=1
#   source=critical sample#sidekiq.queue.size=2 sample#sidekiq.queue.latency=0
queues.select { |q| q.latency >= THRESHOLD }.each do |q|
  puts "source=sidekiq queue=#{q.name} size=#{q.size} latency=#{q.latency}s"
end
